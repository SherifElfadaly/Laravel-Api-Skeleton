pipeline {
    agent any
    stages {
        stage('Build') {
            steps {
                sh 'sudo mkdir -p /var/www/docker/skeleton'
                sh 'sudo rm -rf /var/www/docker/skeleton/app /var/www/docker/skeleton/config /var/www/docker/skeleton/resources /var/www/docker/skeleton/.env'
                sh 'sudo cp /var/www/configs/skeleton/.env ../skeleton/.env'
                sh 'sudo cp -rf ../skeleton /var/www/docker/'
                sh 'sudo docker image prune -f'
                sh 'sudo docker-compose -f /var/www/docker/skeleton/docker/docker-compose.yml build'
            }
        }
        stage('Deploy') {
            steps {
                sh 'sudo docker-compose -f /var/www/docker/skeleton/docker/docker-compose.yml up -d'
                sh 'sudo docker exec skeleton php -d memory_limit=-1 /usr/local/bin/composer update nothing --prefer-dist --lock'
                sh 'sudo docker exec skeleton php -d memory_limit=-1 /usr/local/bin/composer install --prefer-dist --optimize-autoloader'
                sh 'sudo docker exec skeleton php artisan clear-compiled'
                sh 'sudo docker exec skeleton php artisan view:clear'
                sh 'sudo docker exec skeleton php artisan cache:clear'
                sh 'sudo docker exec skeleton php artisan config:clear'
                sh 'sudo docker exec skeleton php artisan module:optimize'
                sh 'sudo docker exec skeleton php artisan module:migrate --force'
                sh 'sudo docker exec skeleton php artisan module:seed roles --force'
                sh 'sudo docker exec skeleton php artisan module:seed --force'
                sh 'sudo docker exec skeleton php artisan optimize'
                sh 'sudo docker exec skeleton php artisan storage:link'
                sh 'sudo docker exec skeleton php artisan module:passport:install'
                sh 'sudo docker exec skeleton php artisan doc:generate'
                sh 'sudo docker exec skeleton php artisan queue:restart'
                sh 'sudo docker exec skeleton php artisan octane:reload --server=swoole'
            }
        }
    }
}